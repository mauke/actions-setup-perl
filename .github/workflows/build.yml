name: build perl

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        # - macOS-latest # aws-cli doesn't works in macOS 
        perl:
        - "5.30.0"
        - "5.28.2"
        - "5.28.1"
        - "5.28.0"
        - "5.26.3"
        - "5.26.2"
        - "5.26.1"
        - "5.26.0"
    steps:
    - uses: actions/checkout@v1
    - name: build
      run: |
        curl -sL https://raw.githubusercontent.com/tokuhirom/Perl-Build/master/perl-build > "$RUNNER_TEMP/perl-build"
        perl "$RUNNER_TEMP/perl-build" "$PERL_VERSION" "$RUNNER_TOOL_CACHE/perl/$PERL_VERSION/x64" --noman
        cd "$RUNNER_TOOL_CACHE/perl/$PERL_VERSION/x64" && tar zcf "$RUNNER_TEMP/perl.tar.gz" .
      env:
        PERL_VERSION: ${{ matrix.perl }}

    - name: upload
      run: |
        BUILD_OS=$(uname | tr '[A-Z]' '[a-z]')
        aws s3 cp --acl public-read "$RUNNER_TEMP/perl.tar.gz" "s3://shogo82148-actions-setup-perl/$CURRENT_VERSION/perl-$PERL_VERSION-$BUILD_OS-x64.tar.gz"
      env:
        CURRENT_VERSION: v0.0.1
        PERL_VERSION: ${{ matrix.perl }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # windows:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os:
  #       - windows-2019
  #       # - windows-2016
  #       perl:
  #       - "5.30.0"
  #       - "5.28.2"
  #       - "5.26.3"
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: build
  #     run: |
  #       Invoke-WebRequest -Uri https://raw.githubusercontent.com/tokuhirom/Perl-Build/master/perl-build -OutFile $env:RUNNER_TEMP\perl-build
  #       $minor_version = $env:PERL_VERSION.Split(".")[0,1] -join "."
  #       C:\Strawberry\perl\bin\perl.exe $env:RUNNER_TEMP\perl-build $env:PERL_VERSION $env:RUNNER_TOOL_CACHE\perl\$minor_version\x64 --noman
  #     env:
  #       PERL_VERSION: ${{ matrix.perl }}
  #     shell: powershell
